{
	"info": {
		"_postman_id": "adf5462f-6dbf-4718-8524-dc701ab00725",
		"name": "ffc-multi-variation-cache-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"\r",
							"console.log(jsonData);\r",
							"tests[\"name = \" + jsonData.token] = true;\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"\r",
							"console.log('#########LOGIN END#######');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('#########LOGIN STARTED#######');"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"identity\": \"me@hu-beau.com\",\r\n  \"password\": \"OTgxZDhiNmMt\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/api/v2/user/login-by-password",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"api",
						"v2",
						"user",
						"login-by-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Feature Flag",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('#########Create feature flag STARTED#######');\r",
							"\r",
							"\r",
							"var flagName = \"ffc-multi-variation-cache-test-data1-\" + new Date().getTime();\r",
							"pm.environment.set(\"flag-name1\", flagName);\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(jsonData);\r",
							"pm.collectionVariables.set(\"featureFlagId1\", jsonData.id);\r",
							"\r",
							"console.log('#########Create feature flag END#######');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{flag-name1}}\",\r\n  \"environmentId\": {{environmentId}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/FeatureFlags/CreateFeatureFlag",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"FeatureFlags",
						"CreateFeatureFlag"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Feature Flag",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('#########Get feature flag STARTED#######');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful Get request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.collectionVariables.set(\"featureFlagName1\", jsonData.ff.name);\r",
							"pm.collectionVariables.set(\"featureFlagKeyName1\", jsonData.ff.keyName);\r",
							"\r",
							"\r",
							"console.log('#########Create feature flag END#######');"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/FeatureFlags/GetFeatureFlag?id={{featureFlagId1}}",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"FeatureFlags",
						"GetFeatureFlag"
					],
					"query": [
						{
							"key": "id",
							"value": "{{featureFlagId1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Feature Flag",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log('#########Update feature flag STARTED#######');\r",
							"var testData1Str = pm.collectionVariables.get(\"testData1\");\r",
							"\r",
							"testData1Str = testData1Str.replace('##{featureFlagId1}##', pm.collectionVariables.get(\"featureFlagId1\"));\r",
							"testData1Str = testData1Str.replace('##{featureFlagId1}##', pm.collectionVariables.get(\"featureFlagId1\"));\r",
							"testData1Str = testData1Str.replace('##{featureFlagName1}##', pm.collectionVariables.get(\"featureFlagName1\"));\r",
							"testData1Str = testData1Str.replace('##{featureFlagKeyName1}##', pm.collectionVariables.get(\"featureFlagKeyName1\"));\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"testData1-update\", testData1Str);\r",
							"\r",
							"\r",
							"console.log(JSON.parse(pm.collectionVariables.get(\"testData1-update\")));\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful PUT request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"console.log('#########Update feature flag END#######');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{testData1-update}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/FeatureFlags/UpdateFeatureFlag",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"FeatureFlags",
						"UpdateFeatureFlag"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Varation first time",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"console.log('#########Get Varation first time STARTED#######');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    var responseData = JSON.parse(responseBody);\r",
							"    pm.expect(responseData.data.id).to.be.equal(0);\r",
							"});\r",
							"\r",
							"console.log('#########Get Varation first time END#######');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "envSecret",
						"value": "{{environmentSecret}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"featureFlagKeyName\": \"{{featureFlagKeyName1}}\",\r\n    \"userName\": \"hu-beau\",\r\n    \"userEmail\": \"hu-beau@outlook.com\",\r\n    \"userKeyId\": \"hu-beau@outlook.com\",\r\n    \"customizedProperties\": [\r\n        {\r\n            \"name\": \"groups\",\r\n            \"value\": \"1\"\r\n        },\r\n        {\r\n            \"name\": \"version\",\r\n            \"value\": \"1.0.x\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/api/public/feature-flag/variation",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"api",
						"public",
						"feature-flag",
						"variation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Varation without change",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"console.log('#########Get Varation without change STARTED#######');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    var responseData = JSON.parse(responseBody);\r",
							"    pm.expect(responseData.data.id).to.be.equal(0);\r",
							"});\r",
							"\r",
							"console.log('#########Get Varation without change END#######');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "envSecret",
						"value": "{{environmentSecret}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"featureFlagKeyName\": \"{{featureFlagKeyName1}}\",\r\n    \"userName\": \"hu-beau\",\r\n    \"userEmail\": \"hu-beau@outlook.com\",\r\n    \"userKeyId\": \"hu-beau@outlook.com\",\r\n    \"customizedProperties\": [\r\n        {\r\n            \"name\": \"groups\",\r\n            \"value\": \"1\"\r\n        },\r\n        {\r\n            \"name\": \"version\",\r\n            \"value\": \"1.0.x\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/api/public/feature-flag/variation",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"api",
						"public",
						"feature-flag",
						"variation"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Varation without changed properties",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"console.log('#########Get Varation without changed properties STARTED#######');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    var responseData = JSON.parse(responseBody);\r",
							"    pm.expect(responseData.data.id).to.be.equal(2);\r",
							"});\r",
							"\r",
							"console.log('#########Get Varation without changed properties END#######');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "envSecret",
						"value": "{{environmentSecret}}",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"featureFlagKeyName\": \"{{featureFlagKeyName1}}\",\r\n    \"userName\": \"hu-beau\",\r\n    \"userEmail\": \"hu-beau@outlook.com\",\r\n    \"userKeyId\": \"hu-beau@outlook.com\",\r\n    \"customizedProperties\": [\r\n        {\r\n            \"name\": \"groups\",\r\n            \"value\": \"1\"\r\n        },\r\n        {\r\n            \"name\": \"version\",\r\n            \"value\": \"2.0.x\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apihost}}/api/public/feature-flag/variation",
					"host": [
						"{{apihost}}"
					],
					"path": [
						"api",
						"public",
						"feature-flag",
						"variation"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var environmentSecret = \"YzA4LTUxZTEtNCUyMDIxMDkwMjEwNDQ1N19fMl9fMl9fNF9fZGVmYXVsdF9kNmZlNQ==\";",
					"var environmentId = 4;",
					"",
					"",
					"pm.collectionVariables.set(\"environmentId\", environmentId);",
					"pm.collectionVariables.set(\"projectId\", 2);",
					"pm.collectionVariables.set(\"organizationId\", 2);",
					"pm.collectionVariables.set(\"organizationId\", 2);",
					"pm.collectionVariables.set(\"environmentSecret\", environmentSecret)",
					"",
					"var variationOptions = generateVariationOptions(5);",
					"",
					"",
					"var defaultRulePercentageRollouts = [",
					"    {",
					"        \"rolloutPercentage\": [0, 0.7],",
					"        \"valueOption\": {",
					"            \"localId\": 2,",
					"            \"displayOrder\": 2,",
					"            \"variationValue\": \"A\"",
					"        }",
					"    },",
					"    {",
					"        \"rolloutPercentage\": [0.7, 1],",
					"        \"valueOption\": {",
					"            \"localId\": 3,",
					"            \"displayOrder\": 3,",
					"            \"variationValue\": \"B\"",
					"        }",
					"    }",
					"];",
					"var variationOptionWhenDisabled = randomGetVariationOption(variationOptions);",
					"var targetIndividuals = [];",
					"var fftuwmtr = [",
					"    {",
					"        \"RuleId\": uuidv4(),",
					"        \"RuleName\": \"rule-0\",",
					"        \"RuleJsonContent\": [",
					"            {",
					"                \"property\": \"groups\",",
					"                \"operation\": \"IsOneOf\",",
					"                \"value\": \"[\\\"1\\\",\\\"2\\\"]\"",
					"            },",
					"            {",
					"                \"property\": \"version\",",
					"                \"operation\": \"StartsWith\",",
					"                \"value\": \"1.\"",
					"            }",
					"        ],",
					"        \"valueOptionsVariationRuleValues\": [",
					"            {",
					"                \"rolloutPercentage\": [0, 0.7],",
					"                \"valueOption\": {",
					"                    \"localId\": 0,",
					"                    \"displayOrder\": 0,",
					"                    \"variationValue\": \"Green\"",
					"                }",
					"            },",
					"            {",
					"                \"rolloutPercentage\": [0.7, 1],",
					"                \"valueOption\": {",
					"                    \"localId\": 1,",
					"                    \"displayOrder\": 1,",
					"                    \"variationValue\": \"Blue\"",
					"                }",
					"            }",
					"        ]",
					"    }",
					"];",
					"var testData1 = {",
					"    \"id\": \"##{featureFlagId1}##\",",
					"    \"environmentId\": environmentId,",
					"    \"objectType\": \"FeatureFlag\",",
					"    \"ff\": {",
					"        \"id\": \"##{featureFlagId1}##\",",
					"        \"name\": \"##{featureFlagName1}##\",",
					"        \"keyName\": \"##{featureFlagKeyName1}##\",",
					"        \"environmentId\": environmentId,",
					"        \"status\": \"Enabled\",",
					"        \"defaultRulePercentageRollouts\": defaultRulePercentageRollouts,",
					"        \"variationOptionWhenDisabled\": variationOptionWhenDisabled",
					"    },",
					"    \"ffp\": [",
					"    ],",
					"    \"fftuwmtr\": fftuwmtr,",
					"    \"targetIndividuals\": targetIndividuals,",
					"    \"variationOptions\": variationOptions,",
					"    \"isMultiOptionMode\": true",
					"}",
					"",
					"",
					"pm.collectionVariables.set(\"testData1\", JSON.stringify(testData1));",
					"",
					"",
					"",
					"",
					"",
					"",
					"// ======================== ==============================================",
					"",
					"",
					"function getRandomInt(min, max) {",
					"    min = Math.ceil(min);",
					"    max = Math.floor(max);",
					"    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive",
					"}",
					"",
					"function arraySum(arr, stopIndex) {",
					"    var sum = 0;",
					"    for (let i = 0; i < stopIndex; i++) {",
					"        sum += arr[i];",
					"    }",
					"    return sum;",
					"}",
					"function randomGetVariationOption(vops) {",
					"    return vops[getRandomInt(0, vops.length - 1)];",
					"}",
					"",
					"",
					"function generateVariationOptions(variationOptionCount) {",
					"    var variationOptions = [];",
					"    variationOptions.push({",
					"        \"localId\": 0,",
					"        \"displayOrder\": 0,",
					"        \"variationValue\": \"Green\"",
					"    });",
					"    variationOptions.push({",
					"        \"localId\": 0,",
					"        \"displayOrder\": 0,",
					"        \"variationValue\": \"Blue\"",
					"    });",
					"    variationOptions.push({",
					"        \"localId\": 0,",
					"        \"displayOrder\": 0,",
					"        \"variationValue\": \"A\"",
					"    });",
					"    variationOptions.push({",
					"        \"localId\": 0,",
					"        \"displayOrder\": 0,",
					"        \"variationValue\": \"B\"",
					"    });",
					"    return variationOptions;",
					"}",
					"",
					"function getRandomElementsFromArray(arr, n) {",
					"    var result = new Array(n),",
					"        len = arr.length,",
					"        taken = new Array(len);",
					"    if (n > len)",
					"        throw new RangeError(\"getRandom: more elements taken than available\");",
					"    while (n--) {",
					"        var x = Math.floor(Math.random() * len);",
					"        result[n] = arr[x in taken ? taken[x] : x];",
					"        taken[x] = --len in taken ? taken[len] : len;",
					"    }",
					"    return result;",
					"}",
					"function uuidv4() {",
					"    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {",
					"        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);",
					"        return v.toString(16);",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apihost",
			"value": "https://ffc-api-ce2-dev.chinacloudsites.cn"
		},
		{
			"key": "environmentId",
			"value": ""
		},
		{
			"key": "projectId",
			"value": ""
		},
		{
			"key": "organizationId",
			"value": ""
		},
		{
			"key": "environmentSecret",
			"value": ""
		},
		{
			"key": "testData1",
			"value": ""
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "featureFlagId1",
			"value": ""
		},
		{
			"key": "featureFlagName1",
			"value": ""
		},
		{
			"key": "featureFlagKeyName1",
			"value": ""
		},
		{
			"key": "testData1-update",
			"value": ""
		}
	]
}